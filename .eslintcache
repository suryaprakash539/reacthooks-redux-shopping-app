[{"E:\\shopping-app\\src\\App.js":"1","E:\\shopping-app\\src\\index.js":"2","E:\\shopping-app\\src\\components\\Header.js":"3","E:\\shopping-app\\src\\components\\HomeContainer.js":"4","E:\\shopping-app\\src\\components\\HomeBanner.js":"5","E:\\shopping-app\\src\\store.js":"6","E:\\shopping-app\\src\\reducers\\productReducer.js":"7","E:\\shopping-app\\src\\components\\Products.js":"8","E:\\shopping-app\\src\\components\\ProductItem.js":"9","E:\\shopping-app\\src\\components\\Cart.js":"10"},{"size":650,"mtime":1606280298168,"results":"11","hashOfConfig":"12"},{"size":593,"mtime":1606241248475,"results":"13","hashOfConfig":"14"},{"size":716,"mtime":1606280245435,"results":"15","hashOfConfig":"14"},{"size":392,"mtime":1606227609939,"results":"16","hashOfConfig":"14"},{"size":404,"mtime":1606884260942,"results":"17","hashOfConfig":"14"},{"size":241,"mtime":1606225595749,"results":"18","hashOfConfig":"14"},{"size":557,"mtime":1606228144170,"results":"19","hashOfConfig":"14"},{"size":1455,"mtime":1606280060004,"results":"20","hashOfConfig":"12"},{"size":1027,"mtime":1606884305054,"results":"21","hashOfConfig":"14"},{"size":1643,"mtime":1606241422885,"results":"22","hashOfConfig":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"blle0o",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dbrwij",{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"E:\\shopping-app\\src\\App.js",[],"E:\\shopping-app\\src\\index.js",[],"E:\\shopping-app\\src\\components\\Header.js",["44","45","46"],"E:\\shopping-app\\src\\components\\HomeContainer.js",[],"E:\\shopping-app\\src\\components\\HomeBanner.js",[],"E:\\shopping-app\\src\\store.js",[],"E:\\shopping-app\\src\\reducers\\productReducer.js",[],"E:\\shopping-app\\src\\components\\Products.js",["47"],"E:\\shopping-app\\src\\components\\ProductItem.js",["48"],"E:\\shopping-app\\src\\components\\Cart.js",["49"],"import React from \"react\";\r\nimport { Container, Row, Col, Button, Card } from \"react-bootstrap\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nconst Cart = ({ cartItems, removeItem, payment }) => {\r\n  let totalAmount = cartItems.reduce((Amount, item) => item.price + Amount, 0);\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h1 className=\"text-success text-center\">Your Cart</h1>\r\n        <ListGroup>\r\n          {cartItems.map((item) => (\r\n            <ListGroup.Item key={item.id}>\r\n              <Row>\r\n                <Col>\r\n                  <img height={120} width={120} src={item.image} />\r\n                </Col>\r\n                <Col className=\"text-center\">\r\n                  <div className=\"text-primary\">{item.title}</div>\r\n                  <span>price :- {item.price}</span>\r\n                  <br />\r\n                  <Button variant=\"danger\" onClick={() => removeItem(item.id)}>\r\n                    Remove\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n          ))}\r\n        </ListGroup>\r\n        {cartItems.length >= 1 ? (\r\n          <Card className=\"text-center mt-3\">\r\n            <Card.Body>\r\n              Total Cost for {cartItems.length} products is Rs. {totalAmount}\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <Button variant=\"success\" onClick={() => payment()}>\r\n                pay here\r\n              </Button>\r\n            </Card.Footer>\r\n          </Card>\r\n        ) : (\r\n          <h1 className=\"text-warning\">Cart is empty</h1>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n",{"ruleId":"50","severity":1,"message":"51","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":19},{"ruleId":"50","severity":1,"message":"54","line":2,"column":21,"nodeType":"52","messageId":"53","endLine":2,"endColumn":24},{"ruleId":"50","severity":1,"message":"55","line":2,"column":26,"nodeType":"52","messageId":"53","endLine":2,"endColumn":29},{"ruleId":"50","severity":1,"message":"56","line":5,"column":31,"nodeType":"52","messageId":"53","endLine":5,"endColumn":36},{"ruleId":"50","severity":1,"message":"54","line":4,"column":10,"nodeType":"52","messageId":"53","endLine":4,"endColumn":13},{"ruleId":"57","severity":1,"message":"58","line":17,"column":19,"nodeType":"59","endLine":17,"endColumn":68},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'Alert' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]